x-logging: &logging
  options:
    max-size: "256k"
    max-file: "1"
  driver: json-file

services:

  frontend:
    build:
      context: ./frontend
      network: host
    restart: always
    logging: *logging
    environment:
      - "API_BASE_URI=$API_BASE_URI"
      - "STREAMLIT_SERVER_BASE_URL_PATH=$UI_BASE_URI"
      - "LISTEN_PORT=$LISTEN_PORT"
      - "LOG_LEVEL=INFO"
    ports:
      - "8501:8501" # direct access
      - "15678:5678" # debugger
    volumes:
      - ./frontend/src:/app/src

  backend:
    build:
      context: ./backend
      network: host
    restart: always
    environment:
      - "API_BASE_URI=$API_BASE_URI"
      - "OPENAI_BASE_URL=$LLM_API_BASE_URL"
      - "OPENAI_API_BASE=$LLM_API_BASE_URL"
      - "OPENAI_API_KEY=$LLM_API_KEY"
      - "LLM_MODEL=$LLM_MODEL"
      - "QDRANT_DB_HOST=qdrant"
      - "LOG_LEVEL=INFO"
    logging: *logging
    volumes:
      - ./backend/src:/app/src
    ports:
      - "5678:5678" # debugger
    extra_hosts:
      - "host.docker.internal:host-gateway"

  qdrant:
    build:
      context: ./qdrant
    restart: always
    logging: *logging
    ports:
      - "6333:6333" # direct access
    volumes:
      - "qdrant-data:/qdrant/storage:z"
    

  flowise:
      image: flowiseai/flowise:latest
      container_name: flowise
      restart: unless-stopped
      ports:
        - "3000:3000"
      volumes:
        - flowise_data:/root/.flowise
  neo4j:
    build:
      context: ./neo4j
    restart: always
    logging: *logging
    ports:
      - "7474:7474" # direct access
      - "7687:7687" # direct access
    environment:
      - NEO4J_AUTH=none
    volumes:
      - "neo4j-data:/data:z"

volumes:
  qdrant-data:
  neo4j-data:
  flowise_data: